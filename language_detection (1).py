# -*- coding: utf-8 -*-
"""Language Detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Dwmyk9Efj7Ss1pC1ob5akKmp7STKBo4W
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from wordcloud import WordCloud
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.tree import DecisionTreeClassifier

df = pd.read_csv('/content/Language Detection.csv')

df

plt.figure(figsize=(20,10))
sns.countplot(x='Language',data=df)
plt.show()

df['Language'].unique()

from nltk.corpus import stopwords
import nltk

nltk.download('stopwords')

text =" ".join(df[df['Language'] == 'English']['Text'])
wordcloud = WordCloud(width=800,height=400,background_color='white',stopwords=set(stopwords.words('english'))).generate(text)

plt.figure(figsize=(10,5))
plt.imshow(wordcloud,interpolation='bilinear')
plt.title("Word Cloud for English Lnguage")
plt.axis('off')
plt.show()

text = " ".join(df[df['Language'] == 'English']['Text'])
text = text.lower()
words = text.split()
words = [word for word in words if word not in set(stopwords.words('english'))]
word_freq = nltk.FreqDist(words)
common_words = word_freq.most_common(10)

words

common_words

x_values, y_values = zip(*common_words)
plt.figure(figsize = (10,5))

plt.bar(x_values,y_values)
plt.xlabel('Words')
plt.ylabel('Frequency')
plt.xticks(rotation=45)
plt.show()

x = np.array(df['Text'])
y = np.array(df['Language'])

cv = CountVectorizer(lowercase=True)
X = cv.fit_transform(x)
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.2,random_state=42)

print(X.toarray()[0])
fn = cv.get_feature_names_out()
print(fn.shape)

rf = DecisionTreeClassifier(random_state=42)
rf.fit(X_train,y_train)
rf.score(X_test,y_test)

dt = MultinomialNB(alpha=0.05)
dt.fit(X_train,y_train)
dt.score(X_test,y_test)

user = input('Enter Setence:')
ans = np.array([user])
enc_ans = cv.transform(ans)
output = dt.predict(enc_ans)
print('The detected Language is: ',output[0])

